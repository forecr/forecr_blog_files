diff --git a/tools/backup_restore/l4t_backup_restore.sh b/tools/backup_restore/l4t_backup_restore.sh
index 837d26f..1d899a7 100755
--- a/tools/backup_restore/l4t_backup_restore.sh
+++ b/tools/backup_restore/l4t_backup_restore.sh
@@ -142,7 +142,7 @@ else
 	nfs_folder="${L4T_BACKUP_RESTORE_DIR}"
 fi
 
-"${INITRD_FLASH_SCRIPT}" --initrd --showlogs "${cmd[@]}" "${target_board}" mmcblk0p1
+"${INITRD_FLASH_SCRIPT}" --initrd --showlogs "${cmd[@]}" "${target_board}" internal
 enable_nfs_for_folder "${nfs_folder}" "usb0"
 if [ "${BACKUP}" = 1 ]; then
 	run_command_on_target "
diff --git a/tools/backup_restore/nvbackup_partitions.sh b/tools/backup_restore/nvbackup_partitions.sh
index b913960..c11b86c 100755
--- a/tools/backup_restore/nvbackup_partitions.sh
+++ b/tools/backup_restore/nvbackup_partitions.sh
@@ -163,7 +163,7 @@ find_default_device() {
 }
 
 SCRIPT_NAME="${0##*/}"
-MAINDEVICE_NAME="mmcblk0"
+MAINDEVICE_NAME="nvme0n1"
 BOOT_0_NAME="${MAINDEVICE_NAME}boot0"
 BOOT_1_NAME="${MAINDEVICE_NAME}boot1"
 QSPI0="mtd0"
@@ -282,20 +282,20 @@ fi
 print_message "Backing up GPT..."
 # Backing up the gpt partition table as gptmbr.img
 pri_gpt_img="gptmbr.img"
-dd if=/dev/mmcblk0 of="${LDK_DIR}/${pri_gpt_img}" bs=512 count=$((sorted[0])) status=progress
+dd if=/dev/nvme0n1 of="${LDK_DIR}/${pri_gpt_img}" bs=512 count=$((sorted[0])) status=progress
 addentry gptmbr.img gpt_1 0 "${sorted[0]}" "" "$(checksum "${LDK_DIR}/${pri_gpt_img}")"
 print_message "Success backing up GPT to ${pri_gpt_img}\n"
 
 print_message "Backing up backup GPT..."
 # Backing up the end gpt partition table as gptbackup.img
 sec_gpt_img="gptbackup.img"
-dd if=/dev/mmcblk0 of="${LDK_DIR}/${sec_gpt_img}" bs=512 skip=$((partition_size - 33)) status=progress
+dd if=/dev/nvme0n1 of="${LDK_DIR}/${sec_gpt_img}" bs=512 skip=$((partition_size - 33)) status=progress
 addentry gptbackup.img gpt_2 $((partition_size - 33)) 33 "" "$(checksum "${LDK_DIR}/${sec_gpt_img}")"
 print_message "Success backing up backup GPT to ${sec_gpt_img}\n"
 
 if [ -d "/sys/block/${BOOT_0_NAME}/" ]; then
 	print_message "Backing up ${BOOT_0_NAME}..."
-	# Backing up the mmcblk0boot0 (first boot partition) as boot0.img
+	# Backing up the nvme0n1boot0 (first boot partition) as boot0.img
 	boot0_img="boot0.img"
 	boot0size=$( cat "/sys/block/${BOOT_0_NAME}/size" )
 	dd if="/dev/${BOOT_0_NAME}" of="${LDK_DIR}/${boot0_img}" status=progress
@@ -305,7 +305,7 @@ fi
 
 if [ -d "/sys/block/${BOOT_1_NAME}/" ]; then
 	print_message "Backing up ${BOOT_1_NAME}..."
-	# Backing up mmcblk0boot1 (second boot partition) as boot1.img
+	# Backing up nvme0n1boot1 (second boot partition) as boot1.img
 	boot1_img="boot1.img"
 	boot1size=$( cat "/sys/block/${BOOT_1_NAME}/size" )
 	dd if="/dev/${BOOT_1_NAME}" of="${LDK_DIR}/${boot1_img}" status=progress
diff --git a/tools/backup_restore/nvrestore_partitions.sh b/tools/backup_restore/nvrestore_partitions.sh
index c7dfe60..5cc3299 100755
--- a/tools/backup_restore/nvrestore_partitions.sh
+++ b/tools/backup_restore/nvrestore_partitions.sh
@@ -49,7 +49,7 @@ TMP_MOUNT="/tmp/mnt"
 ERASE_QSPI=0
 NETWORK_MODE=""
 RAW_IMAGE=
-INTERNAL_STORAGE_DEVICE="mmcblk0"
+INTERNAL_STORAGE_DEVICE="nvme0n1"
 error_message=""
 
 function set_board_spec {
@@ -87,11 +87,11 @@ function cleanup {
 		echo -e "${error_message}"
 	fi
 
-	if [ -f "/sys/block/mmcblk0boot0/force_ro" ]; then
-		echo 1 > /sys/block/mmcblk0boot0/force_ro
+	if [ -f "/sys/block/nvme0n1boot0/force_ro" ]; then
+		echo 1 > /sys/block/nvme0n1boot0/force_ro
 	fi
-	if [ -f "/sys/block/mmcblk0boot1/force_ro" ]; then
-		echo 1 > /sys/block/mmcblk0boot1/force_ro
+	if [ -f "/sys/block/nvme0n1boot1/force_ro" ]; then
+		echo 1 > /sys/block/nvme0n1boot1/force_ro
 	fi
 
 }
@@ -300,10 +300,18 @@ for value in $(grep -v -e '(^ *$|^#)' < "${FILE_NAME}"); do
 			echo "${SCRIPT_NAME} Checksum of ${FIELDS[2]} does not match the checksum in the index file."
 			exit 1
 		fi
-		# partx delete must be called before flashing, and partx add after flashing.
-		partx -d "/dev/${INTERNAL_STORAGE_DEVICE}"
+		# Delete previous GPT if it exists.
+		if partx -s "/dev/${INTERNAL_STORAGE_DEVICE}" >/dev/null 2>&1; then
+			partx -d "/dev/${INTERNAL_STORAGE_DEVICE}"
+		fi
+		# Flash GPT image, refresh and validate.
 		dd if="${FIELDS[1]}" of="/dev/${INTERNAL_STORAGE_DEVICE}"
+		sync
 		partx -v -a "/dev/${INTERNAL_STORAGE_DEVICE}"
+		if ! partx -s "/dev/${INTERNAL_STORAGE_DEVICE}" >/dev/null 2>&1; then
+			echo "Error: GPT does not exist on the /dev/${INTERNAL_STORAGE_DEVICE}"
+			exit 1
+		fi
 		GPT_EXISTS=true
 		break
 	fi
@@ -315,12 +323,12 @@ if [ ${GPT_EXISTS} != true ]; then
 	exit 1
 fi
 
-# The following two lines make mmcblk0boot0 and mmcblk0boot1 writeable.
-if [ -f "/sys/block/mmcblk0boot0/force_ro" ]; then
-	echo 0 > "/sys/block/mmcblk0boot0/force_ro"
+# The following two lines make nvme0n1boot0 and nvme0n1boot1 writeable.
+if [ -f "/sys/block/nvme0n1boot0/force_ro" ]; then
+	echo 0 > "/sys/block/nvme0n1boot0/force_ro"
 fi
-if [ -f "/sys/block/mmcblk0boot1/force_ro" ]; then
-	echo 0 > "/sys/block/mmcblk0boot1/force_ro"
+if [ -f "/sys/block/nvme0n1boot1/force_ro" ]; then
+	echo 0 > "/sys/block/nvme0n1boot1/force_ro"
 fi
 
 restore_non_qspi()
@@ -353,7 +361,7 @@ restore_non_qspi()
 				echo "${SCRIPT_NAME} Checksum of ${FIELDS[2]} does not match the checksum in the index file."
 				exit
 			fi
-			if [ "${FIELDS[2]}" = 'mmcblk0boot0' ] || [ "${FIELDS[2]}" = 'mmcblk0boot1' ] || [ "${FIELDS[2]}" = 'gpt_2' ]; then
+			if [ "${FIELDS[2]}" = 'nvme0n1boot0' ] || [ "${FIELDS[2]}" = 'nvme0n1boot1' ] || [ "${FIELDS[2]}" = 'gpt_2' ]; then
 				dd if="${FIELDS[1]}" of="/dev/${FIELDS[2]}" bs=512 seek=$((FIELDS[3])) count=$((FIELDS[4]))
 			else
 				gzip -c -S img -d "${FIELDS[1]}" | dd of="/dev/${FIELDS[2]}" bs=512 seek=$((FIELDS[3])) count=$((FIELDS[4]))
@@ -406,7 +414,7 @@ fi
 
 
 
-# The following function makes mmcblk0boot0 and mmcblk0boot1 read only, as we
+# The following function makes nvme0n1boot0 and nvme0n1boot1 read only, as we
 # had disabled the read only at the beginning of the script. It will also
 # unmount ${MOUNT_LOC} and ${TMP_MOUNT} if they are mounted.
 cleanup
